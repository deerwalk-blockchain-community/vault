name: Deploy Frontend to Remote Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy to Remote Server
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: 'pnpm'


      - name: Install Dependencies
        # working-directory: frontend
        run: |
          pnpm install

      - name: Build Frontend
        # working-directory: frontend
        run: |
          npx turbo build --filter=./apps/admin
          npx turbo build --filter=./apps/backend
          npx turbo build --filter=./apps/user

      - name: Transfer Admin files to Remote Server
        uses: easingthemes/ssh-deploy@main
        with:
          SOURCE: apps/admin/dest
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          REMOTE_HOST: ${{ secrets.IP_ADDR }}
          REMOTE_USER: ${{ secrets.USERNAME }}
          # EXCLUDE: "/node_modules/"
          TARGET: /home/ubuntu/deployment/admin/


      - name: Transfer User files to Remote Server
        uses: easingthemes/ssh-deploy@main
        with:
          SOURCE: apps/user/dest
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          REMOTE_HOST: ${{ secrets.IP_ADDR }}
          REMOTE_USER: ${{ secrets.USERNAME }}
          # EXCLUDE: "/node_modules/"
          TARGET: /home/ubuntu/deployment/user/


      - name: Transfer Backend files to Remote Server
        uses: easingthemes/ssh-deploy@main
        with:
          SOURCE: apps/backend/dist
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          REMOTE_HOST: ${{ secrets.IP_ADDR }}
          REMOTE_USER: ${{ secrets.USERNAME }}
          # EXCLUDE: "/node_modules/"
          TARGET: /home/ubuntu/deployment/backend/


      - name: SSH into Remote Server and Start Application
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.IP_ADDR }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            PRODUCTION=1 pm2 reload all --update-env
