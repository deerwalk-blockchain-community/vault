datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Gender {
  MALE
  Female
  OTHER
}

enum KYCStatus {
  ACCEPTED
  REJECTED
  APPLIED
}

// binit dai, you just need to implement the core User and KYC Model not the status and other Admin parts, also will have to use IPFS for files:) or we can push hashes of files to the chain whatever you prefer:)
model Users {
  id String @id @default(uuid())
  email String @unique 
  password String 
  isAdmin Boolean @default(false)
  kyc KYCData?
}

model KYCData {
  id Int @id @default(autoincrement())
  firstName String
  lastName String 
  nidNumber String 
  nidImageFront String 
  nidImageBack String
  gender Gender?
  profileImage String
  userId String @unique
  user Users @relation(fields: [userId], references: [id])
  sentToChain Boolean @default(false)
  status KYCStatus
  kycId String?
  rejections Rejections[]
} 

model Rejections{
  id Int @id @default(autoincrement())
  reason String
  kycId Int 
  kyc KYCData @relation(fields:[kycId], references: [id])
}